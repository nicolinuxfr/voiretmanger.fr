{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 44,
  "iteration": 1628599571247,
  "links": [
    {
      "icon": "dashboard",
      "tags": [],
      "title": "TelsaMate",
      "type": "link",
      "url": "[[base_url:raw]]"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "tags": [
        "Custom"
      ],
      "title": "Dashboards",
      "type": "dashboards"
    }
  ],
  "panels": [
    {
      "collapsed": false,
      "datasource": "${DS_TESLAMATE}",
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "panels": [],
      "repeat": "car_id",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "Dolores",
          "value": "1"
        }
      },
      "title": "$car_id",
      "type": "row"
    },
    {
      "datasource": "TeslaMate",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "center",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "noValue": "--",
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 50
              },
              {
                "color": "green",
                "value": 90
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time driven"
            },
            "properties": [
              {
                "id": "unit",
                "value": "clocks"
              },
              {
                "id": "decimals",
                "value": 1
              },
              {
                "id": "displayName",
                "value": "Durée Conduite"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Efficiency"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "light-orange",
                      "value": 75
                    },
                    {
                      "color": "light-green",
                      "value": 99
                    }
                  ]
                }
              },
              {
                "id": "displayName",
                "value": "Efficience"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Energy charged"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 1
              },
              {
                "id": "links",
                "value": []
              },
              {
                "id": "unit",
                "value": "kwatth"
              },
              {
                "id": "displayName",
                "value": "Total Chargé"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg charged"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              },
              {
                "id": "decimals",
                "value": 1
              },
              {
                "id": "displayName",
                "value": "Charge Moyenne"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Costs"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "displayName",
                "value": "Coût"
              },
              {
                "id": "unit",
                "value": "€"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "# charges"
            },
            "properties": [
              {
                "id": "links",
                "value": []
              },
              {
                "id": "displayName",
                "value": "# Charges"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "# drives"
            },
            "properties": [
              {
                "id": "links",
                "value": []
              },
              {
                "id": "displayName",
                "value": "# Trajets"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/sum_distance_km/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "km"
              },
              {
                "id": "displayName",
                "value": "Distance"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/avg_outside_temp_c/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              },
              {
                "id": "displayName",
                "value": "T°"
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "super-light-blue",
                      "value": null
                    },
                    {
                      "color": "super-light-green",
                      "value": 10
                    },
                    {
                      "color": "super-light-red",
                      "value": 20
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/sum_distance_mi/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Distance"
              },
              {
                "id": "unit",
                "value": "mi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/efficiency_net_mi/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Consumption"
              },
              {
                "id": "unit",
                "value": "Wh/mi"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.* at/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "time:YYYY-MM-DD HH:mm"
              },
              {
                "id": "custom.width"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/efficiency_net_km/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Conso Moyenne"
              },
              {
                "id": "unit",
                "value": "Wh/km"
              },
              {
                "id": "custom.width"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/avg_outside_temp_f/"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Temperature"
              },
              {
                "id": "unit",
                "value": "fahrenheit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Début"
            },
            "properties": [
              {
                "id": "unit",
                "value": "time:DD/MM/YYYY"
              },
              {
                "id": "links",
                "value": []
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Fin"
            },
            "properties": [
              {
                "id": "unit",
                "value": "time:DD/MM/YYYY"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Charge Moyenne"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 132
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total Chargé"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 99
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "T°"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 61
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Efficience"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 90
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Conso Moyenne"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 147
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "conso_theorie"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Conso Théorique"
              },
              {
                "id": "unit",
                "value": "Wh/km"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Conso Théorique"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 135
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "vmoy"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              },
              {
                "id": "displayName",
                "value": "Vitesse Moyenne"
              },
              {
                "id": "custom.displayMode",
                "value": "color-text"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "orange",
                      "value": 40
                    },
                    {
                      "color": "green",
                      "value": 70
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 31,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "maxPerRow": 2,
      "options": {
        "frameIndex": 1,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.5.9",
      "repeat": null,
      "repeatDirection": "h",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "Dolores",
          "value": "1"
        }
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\nSELECT\n  duration_min > 1 AND\n  distance > 1 AND\n  ( \n    start_position.usable_battery_level IS NULL OR\n    (end_position.battery_level - end_position.usable_battery_level) = 0 \n  ) AS is_sufficiently_precise,\n  NULLIF(GREATEST(start_ideal_range_km - end_ideal_range_km, 0), 0) AS range_diff,\n  date_trunc('$period', start_date::TIMESTAMP WITHOUT TIME ZONE, '$timezone') as local_period,\n  drives.*\nFROM drives\n  LEFT JOIN positions start_position ON start_position_id = start_position.id\n  LEFT JOIN positions end_position ON end_position_id = end_position.id)\nSELECT\nEXTRACT(EPOCH FROM date_trunc('$period', local_period + ('1 ' || '$period')::INTERVAL))*1000 AS date_from,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('2 ' || '$period')::INTERVAL))*1000 AS date_to,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('1 ' || '$period')::INTERVAL))*1000 AS date_from2,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('2 ' || '$period')::INTERVAL))*1000 AS date_to2,\n  CASE '$period'\n    WHEN 'month' THEN to_char(local_period, 'YYYY Month')\n    WHEN 'year' THEN to_char(local_period, 'YYYY')\n    WHEN 'week' THEN 'week ' || to_char(local_period, 'WW') || ' starting ' || to_char(local_period, 'YYYY-MM-DD')\n    ELSE to_char(local_period, 'YYYY-MM-DD')\n  END AS display,\n  local_period AS date,\n  sum(duration_min)*60 AS sum_duration_h, \n  60*convert_km(sum(distance)::numeric, '$length_unit')/(sum(duration_min)) as vmoy,\n  convert_km(sum(distance)::numeric, '$length_unit') AS sum_distance_$length_unit,\n  convert_celsius(avg(outside_temp_avg), '$temp_unit') AS avg_outside_temp_$temp_unit,\n  count(*) AS cnt,\n  sum(distance)/sum(range_diff) AS efficiency\nFROM data WHERE\n  car_id = $car_id AND\n  $__timeFilter(start_date)\nGROUP BY date\nORDER BY date DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "start_km"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "drives",
          "timeColumn": "start_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n  SELECT\n    charging_processes.*,\n    date_trunc('$period', start_date::TIMESTAMP WITHOUT TIME ZONE, '$timezone') as local_period\n  FROM charging_processes)\nSELECT\nEXTRACT(EPOCH FROM date_trunc('$period', local_period + ('1 ' || '$period')::INTERVAL))*1000 AS date_from,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('2 ' || '$period')::INTERVAL))*1000 AS date_to,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('1 ' || '$period')::INTERVAL))*1000 AS date_from2,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('2 ' || '$period')::INTERVAL))*1000 AS date_to2,\n  CASE '$period'\n    WHEN 'month' THEN to_char(local_period, 'YYYY Month')\n    WHEN 'year' THEN to_char(local_period, 'YYYY')\n    WHEN 'week' THEN 'week ' || to_char(local_period, 'WW') || ' starting ' || to_char(local_period, 'YYYY-MM-DD')\n    ELSE to_char(local_period, 'YYYY-MM-DD')\n  END AS display,\n  local_period AS date,\n  sum(greatest(charge_energy_added,charge_energy_used)) AS sum_consumption_kwh,\n  sum(greatest(charge_energy_added,charge_energy_used)) / count(*) AS avg_consumption_kwh,\n  sum(cost) AS cost_charges,\n  count(*) AS cnt_charges\nFROM data WHERE\n  car_id = $car_id AND\n  $__timeFilter(start_date) AND\n  (charge_energy_added IS NULL OR charge_energy_added > 0.1)\nGROUP BY date\nORDER BY date DESC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n  SELECT\n    drives.*,\n    date_trunc('$period', start_date::TIMESTAMP WITHOUT TIME ZONE, '$timezone') as local_period\n  FROM drives)\nSELECT\nEXTRACT(EPOCH FROM date_trunc('$period', local_period + ('1 ' || '$period')::INTERVAL))*1000 AS date_from,\nEXTRACT(EPOCH FROM date_trunc('$period', local_period + ('2 ' || '$period')::INTERVAL))*1000 AS date_to,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('1 ' || '$period')::INTERVAL))*1000 AS date_from2,\n  EXTRACT(EPOCH FROM date_trunc('$period', local_period + ('2 ' || '$period')::INTERVAL))*1000 AS date_to2,\n  CASE '$period'\n    WHEN 'month' THEN to_char(local_period, 'YYYY Month')\n    WHEN 'year' THEN to_char(local_period, 'YYYY')\n    WHEN 'week' THEN 'week ' || to_char(local_period, 'WW') || ' starting ' || to_char(local_period, 'YYYY-MM-DD')\n    ELSE to_char(local_period, 'YYYY-MM-DD')\n  END AS display,\n  local_period AS date,\n  sum(GREATEST(start_[[preferred_range]]_range_km - end_[[preferred_range]]_range_km, 0) * 940 * car.efficiency) / \n  convert_km(sum(distance)::numeric, '$length_unit') as efficiency_net_$length_unit,\n  sum(GREATEST(start_[[preferred_range]]_range_km - end_[[preferred_range]]_range_km, 0) * 1000 * car.efficiency) / \n  convert_km(sum(distance)::numeric, '$length_unit') as conso_theorie\nFROM data\nJOIN cars car ON car.id = car_id\nWHERE\n  car_id = $car_id AND\n  $__timeFilter(start_date)\nGROUP BY date\nORDER BY date DESC",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "date"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "date": true,
              "date_from": false,
              "date_from2": true,
              "date_to": false,
              "date_to2": true,
              "display": true,
              "timezone": true
            },
            "indexByName": {
              "avg_consumption_kwh": 13,
              "avg_outside_temp_c": 10,
              "cnt": 11,
              "cnt_charges": 12,
              "conso_theorie": 8,
              "cost_charges": 15,
              "date": 3,
              "date_from": 1,
              "date_from2": 16,
              "date_to": 2,
              "date_to2": 17,
              "display": 0,
              "efficiency": 9,
              "efficiency_net_km": 7,
              "sum_consumption_kwh": 14,
              "sum_distance_km": 5,
              "sum_duration_h": 4,
              "vmoy": 6
            },
            "renameByName": {
              "avg_consumption_kwh": "Avg charged",
              "avg_outside_temp_c": "",
              "cnt": "# drives",
              "cnt_charges": "# charges",
              "cost_charges": "Costs",
              "date": "",
              "date_from": "Début",
              "date_to": "Fin",
              "display": "Period",
              "efficiency": "Efficiency",
              "efficiency_net_km": "",
              "sum_consumption_kwh": "Energy charged",
              "sum_distance_km": "",
              "sum_duration_h": "Time driven"
            }
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 27,
  "style": "dark",
  "tags": [
    "Custom"
  ],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "TeslaMate",
        "definition": "SELECT name AS __text, id AS __value FROM cars;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": true,
        "label": "Car",
        "multi": false,
        "name": "car_id",
        "options": [],
        "query": "SELECT name AS __text, id AS __value FROM cars;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "km",
          "value": "km"
        },
        "datasource": "TeslaMate",
        "definition": "select unit_of_length from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "length unit",
        "multi": false,
        "name": "length_unit",
        "options": [],
        "query": "select unit_of_length from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "C",
          "value": "C"
        },
        "datasource": "TeslaMate",
        "definition": "select unit_of_temperature from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "temperature unit",
        "multi": false,
        "name": "temp_unit",
        "options": [],
        "query": "select unit_of_temperature from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "month",
          "value": "month"
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Period",
        "multi": false,
        "name": "period",
        "options": [
          {
            "selected": false,
            "text": "day",
            "value": "day"
          },
          {
            "selected": false,
            "text": "week",
            "value": "week"
          },
          {
            "selected": true,
            "text": "month",
            "value": "month"
          },
          {
            "selected": false,
            "text": "year",
            "value": "year"
          }
        ],
        "query": "day,week,month,year",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "rated",
          "value": "rated"
        },
        "datasource": "TeslaMate",
        "definition": "select preferred_range from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "preferred_range",
        "options": [],
        "query": "select preferred_range from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "Europe/Paris",
          "value": "Europe/Paris"
        },
        "datasource": "TeslaMate",
        "definition": "select name from pg_timezone_names where name like 'posix/%';",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Time zone",
        "multi": false,
        "name": "timezone",
        "options": [],
        "query": "select name from pg_timezone_names where name like 'posix/%';",
        "refresh": 1,
        "regex": "/posix\\/(.*)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "https://teslamate. ",
          "value": "https://teslamate. "
        },
        "datasource": "TeslaMate",
        "definition": "select base_url from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "base_url",
        "options": [],
        "query": "select base_url from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-10y",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "Europe/Paris",
  "title": "Statistiques Périodiques",
  "uid": "_Z45o6FGz",
  "version": 26
}