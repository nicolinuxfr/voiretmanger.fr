{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 49,
  "iteration": 1627746790135,
  "links": [
    {
      "icon": "dashboard",
      "tags": [],
      "title": "TeslaMate",
      "tooltip": "",
      "type": "link",
      "url": "[[base_url:raw]]"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "tags": [
        "Custom"
      ],
      "title": "Dashboards",
      "type": "dashboards"
    }
  ],
  "panels": [
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 8,
      "panels": [],
      "repeat": "car_id",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "title": "$car_id",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "TeslaMate",
      "decimals": 0,
      "description": "$prixsuc €/kWh\n",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "id": 40,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "$$hashKey": "object:2334",
          "name": "value to text",
          "value": 1
        },
        {
          "$$hashKey": "object:2335",
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "postfix": " €",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "sparkline": {
        "fillColor": "rgba(86, 166, 75, 0.25)",
        "full": false,
        "lineColor": "#56A64B",
        "show": true,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "prix",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n    SELECT\n        (round(extract(epoch FROM start_date) - 10) * 1000) AS start_date_ts,\n        (round(extract(epoch FROM end_date) + 10) * 1000) AS end_date_ts,\n        start_date,\n        end_date,\n        CONCAT_WS(', ', COALESCE(addresses.name, nullif(CONCAT_WS(' ', addresses.road, addresses.house_number), '')), addresses.city) AS address,\n        g.name as geofence_name,\n        g.id as geofence_id,\n        p.latitude,\n        p.longitude,\n        cp.charge_energy_added,\n        cp.charge_energy_used,\n        duration_min,\n        start_battery_level,\n        end_battery_level,\n        start_[[preferred_range]]_range_km,\n        end_[[preferred_range]]_range_km,\n        outside_temp_avg,\n        cp.id,\n        lag(end_[[preferred_range]]_range_km) OVER (ORDER BY start_date) - start_[[preferred_range]]_range_km AS range_loss,\n        p.odometer - lag(p.odometer) OVER (ORDER BY start_date) AS distance,\n        cars.efficiency,\n        cp.car_id,\n        cost,\n        max(c.charger_phases) as max_charger_phases,\n        max(c.charger_power) as max_charger_power\n    FROM\n        charging_processes cp\n\t  LEFT JOIN charges c ON cp.id = c.charging_process_id\n    LEFT JOIN positions p ON p.id = cp.position_id\n    LEFT JOIN cars ON cars.id = cp.car_id\n    LEFT JOIN addresses ON addresses.id = cp.address_id\n    LEFT JOIN geofences g ON g.id = geofence_id\nWHERE \n    cp.car_id = $car_id AND\n    $__timeFilter(start_date) AND\n    (cp.charge_energy_added IS NULL OR cp.charge_energy_added > 0) AND\n    ('${geofence:pipe}' = '-1' OR geofence_id in ($geofence))\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,21,p.odometer\nORDER BY\n    start_date\n)\nSELECT\n    start_date_ts,\n    end_date_ts,\n    CASE WHEN geofence_id IS NULL THEN CONCAT('new?lat=', latitude, '&lng=', longitude)\n         WHEN geofence_id IS NOT NULL THEN CONCAT(geofence_id, '/edit')\n    END as path,\n    car_id,\n    id,\n    \n    -- Columns\n    start_date as start_date_[[length_unit]],\n    end_date,\n    COALESCE(geofence_name, address) as address,    \n    duration_min*60 as duration_sec,\n        TO_CHAR((duration_min * INTERVAL '1 minute'), 'HH24:MI') as duration_str,\n\n    charge_energy_added * 60 / NULLIF (duration_min, 0) AS charge_energy_added_per_hour,\n    max_charger_power,\n    end_battery_level - start_battery_level AS delta_battery,\n    charge_energy_added,\n    convert_km((end_[[preferred_range]]_range_km - start_[[preferred_range]]_range_km) ::numeric* 60 / NULLIF (duration_min, 0), '$length_unit') AS range_added_per_hour_$length_unit,\n    start_battery_level,\n    end_battery_level,\n    convert_km(distance::numeric, '$length_unit') AS distance_$length_unit,\n    charge_energy_used,\n    CASE WHEN charge_energy_used IS NULL THEN NULL ELSE LEAST(charge_energy_added / NULLIF(charge_energy_used, 0), 1.0) END as charging_efficiency,\n    $prixsuc * charge_energy_added as prix,\n    cost\n    FROM\n    data\nWHERE\n    (distance >= 0 OR distance IS NULL)\n    AND max_charger_phases is NULL\n    AND charge_energy_added * 60 / NULLIF (duration_min, 0) >= $pmoy\n    AND end_battery_level - start_battery_level >= $delta_battery\n    AND duration_min <= $duree\n    AND duration_min >= $dureemin\n    AND start_battery_level >= $batteriedebut\n    AND end_battery_level <= $batteriefin\n    AND max_charger_power >= $pmax\nORDER BY\n  start_date DESC;\n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "addresses",
          "timeColumn": "inserted_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Prix SuC",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "60%",
      "valueMaps": [
        {
          "$$hashKey": "object:2337",
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "total"
    },
    {
      "cacheTimeout": null,
      "datasource": "TeslaMate",
      "description": "Utilisée en charge DC",
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(0, 0, 0, 0.7)",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "charge_energy_used"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kWh"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 2,
        "y": 1
      },
      "id": 37,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "/^charge_energy_used$/",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "7.5.9",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n    SELECT\n        (round(extract(epoch FROM start_date) - 10) * 1000) AS start_date_ts,\n        (round(extract(epoch FROM end_date) + 10) * 1000) AS end_date_ts,\n        start_date,\n        end_date,\n        CONCAT_WS(', ', COALESCE(addresses.name, nullif(CONCAT_WS(' ', addresses.road, addresses.house_number), '')), addresses.city) AS address,\n        g.name as geofence_name,\n        g.id as geofence_id,\n        p.latitude,\n        p.longitude,\n        cp.charge_energy_added,\n        cp.charge_energy_used,\n        duration_min,\n        start_battery_level,\n        end_battery_level,\n        start_[[preferred_range]]_range_km,\n        end_[[preferred_range]]_range_km,\n        outside_temp_avg,\n        cp.id,\n        lag(end_[[preferred_range]]_range_km) OVER (ORDER BY start_date) - start_[[preferred_range]]_range_km AS range_loss,\n        p.odometer - lag(p.odometer) OVER (ORDER BY start_date) AS distance,\n        cars.efficiency,\n        cp.car_id,\n        cost,\n        max(c.charger_phases) as max_charger_phases,\n        max(c.charger_power) as max_charger_power\n    FROM\n        charging_processes cp\n\t  LEFT JOIN charges c ON cp.id = c.charging_process_id\n    LEFT JOIN positions p ON p.id = cp.position_id\n    LEFT JOIN cars ON cars.id = cp.car_id\n    LEFT JOIN addresses ON addresses.id = cp.address_id\n    LEFT JOIN geofences g ON g.id = geofence_id\nWHERE \n    cp.car_id = $car_id AND\n    $__timeFilter(start_date) AND\n    (cp.charge_energy_added IS NULL OR cp.charge_energy_added > 0) AND\n    ('${geofence:pipe}' = '-1' OR geofence_id in ($geofence))\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,21,p.odometer\nORDER BY\n    start_date\n)\nSELECT\n    start_date_ts,\n    end_date_ts,\n    CASE WHEN geofence_id IS NULL THEN CONCAT('new?lat=', latitude, '&lng=', longitude)\n         WHEN geofence_id IS NOT NULL THEN CONCAT(geofence_id, '/edit')\n    END as path,\n    car_id,\n    id,\n    \n    -- Columns\n    start_date as start_date_[[length_unit]],\n    end_date,\n    COALESCE(geofence_name, address) as address,    \n    duration_min*60 as duration_sec,\n        TO_CHAR((duration_min * INTERVAL '1 minute'), 'HH24:MI') as duration_str,\n\n    charge_energy_added * 60 / NULLIF (duration_min, 0) AS charge_energy_added_per_hour,\n    max_charger_power,\n    end_battery_level - start_battery_level AS delta_battery,\n    charge_energy_added,\n    convert_km((end_[[preferred_range]]_range_km - start_[[preferred_range]]_range_km) ::numeric* 60 / NULLIF (duration_min, 0), '$length_unit') AS range_added_per_hour_$length_unit,\n    start_battery_level,\n    end_battery_level,\n    convert_km(distance::numeric, '$length_unit') AS distance_$length_unit,\n    charge_energy_used,\n    CASE WHEN charge_energy_used IS NULL THEN NULL ELSE LEAST(charge_energy_added / NULLIF(charge_energy_used, 0), 1.0) END as charging_efficiency,\n    $prixsuc * charge_energy_added as prix,\n    cost\n    FROM\n    data\nWHERE\n    (distance >= 0 OR distance IS NULL)\n    AND max_charger_phases is NULL\n    AND charge_energy_added * 60 / NULLIF (duration_min, 0) >= $pmoy\n    AND end_battery_level - start_battery_level >= $delta_battery\n    AND duration_min <= $duree\n    AND duration_min >= $dureemin\n    AND start_battery_level >= $batteriedebut\n    AND end_battery_level <= $batteriefin\n    AND max_charger_power >= $pmax\nORDER BY\n  start_date DESC;\n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "odometer"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "positions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Énergie",
      "transparent": true,
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": "TeslaMate",
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(0, 0, 0, 0.7)",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "⏱"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "⚡ "
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatt"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ajout 🔋 "
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ajout ⚡️ "
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "% Départ"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "% Fin"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Distance entre deux charges"
            },
            "properties": [
              {
                "id": "unit",
                "value": "lengthkm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Efficience"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 16,
        "x": 4,
        "y": 1
      },
      "id": 42,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "7.5.9",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n    SELECT\n        (round(extract(epoch FROM start_date) - 10) * 1000) AS start_date_ts,\n        (round(extract(epoch FROM end_date) + 10) * 1000) AS end_date_ts,\n        start_date,\n        end_date,\n        CONCAT_WS(', ', COALESCE(addresses.name, nullif(CONCAT_WS(' ', addresses.road, addresses.house_number), '')), addresses.city) AS address,\n        g.name as geofence_name,\n        g.id as geofence_id,\n        p.latitude,\n        p.longitude,\n        cp.charge_energy_added,\n        cp.charge_energy_used,\n        duration_min,\n        start_battery_level,\n        end_battery_level,\n        start_[[preferred_range]]_range_km,\n        end_[[preferred_range]]_range_km,\n        outside_temp_avg,\n        cp.id,\n        lag(end_[[preferred_range]]_range_km) OVER (ORDER BY start_date) - start_[[preferred_range]]_range_km AS range_loss,\n        p.odometer - lag(p.odometer) OVER (ORDER BY start_date) AS distance,\n        cars.efficiency,\n        cp.car_id,\n        cost,\n        max(c.charger_phases) as max_charger_phases,\n        max(c.charger_power) as max_charger_power\n\n    FROM\n        charging_processes cp\n\t  LEFT JOIN charges c ON cp.id = c.charging_process_id\n    LEFT JOIN positions p ON p.id = cp.position_id\n    LEFT JOIN cars ON cars.id = cp.car_id\n    LEFT JOIN addresses ON addresses.id = cp.address_id\n    LEFT JOIN geofences g ON g.id = geofence_id\nWHERE \n    cp.car_id = $car_id AND\n    $__timeFilter(start_date) AND\n    (cp.charge_energy_added IS NULL OR cp.charge_energy_added > 0) AND\n    ('${geofence:pipe}' = '-1' OR geofence_id in ($geofence))\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,21,p.odometer\nORDER BY\n    start_date\n)\nSELECT\n    CASE WHEN geofence_id IS NULL THEN CONCAT('new?lat=', latitude, '&lng=', longitude)\n         WHEN geofence_id IS NOT NULL THEN CONCAT(geofence_id, '/edit')\n    END as path,\n    -- Columns\n    start_date as start_date_[[length_unit]],\n    end_date,\n    COALESCE(geofence_name, address) as address,    \n    duration_min as \"⏱\",\n    charge_energy_added * 60 / NULLIF (duration_min, 0) AS \"⚡ \" ,\n    end_battery_level - start_battery_level AS \"Ajout 🔋 \",\n    charge_energy_added AS \"Ajout ⚡️ \",\n    start_battery_level AS \"% Départ\",\n    end_battery_level AS \"% Fin\",\n    convert_km(distance::numeric, '$length_unit') AS \"Distance entre deux charges\",\n    CASE WHEN charge_energy_used IS NULL THEN NULL ELSE LEAST(charge_energy_added / NULLIF(charge_energy_used, 0), 1.0) END as \"Efficience\"\n    FROM\n    data\nWHERE\n    (distance >= 0 OR distance IS NULL)\n    AND max_charger_phases is NULL\n    AND charge_energy_added * 60 / NULLIF (duration_min, 0) >= $pmoy\n    AND end_battery_level - start_battery_level >= $delta_battery\n    AND duration_min <= $duree\n    AND duration_min >= $dureemin\n    AND start_battery_level >= $batteriedebut\n    AND end_battery_level <= $batteriefin\n    AND max_charger_power >= $pmax\n\nORDER BY\n  start_date DESC;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "latitude"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "addresses",
          "timeColumn": "inserted_at",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Moyennes",
      "transparent": true,
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": "TeslaMate",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(0, 0, 0, 0.7)",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "id"
            },
            "properties": [
              {
                "id": "unit",
                "value": "🔌"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 20,
        "y": 1
      },
      "id": 28,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "count"
          ],
          "fields": "/^id$/",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "7.5.9",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n    SELECT\n        (round(extract(epoch FROM start_date) - 10) * 1000) AS start_date_ts,\n        (round(extract(epoch FROM end_date) + 10) * 1000) AS end_date_ts,\n        start_date,\n        end_date,\n        CONCAT_WS(', ', COALESCE(addresses.name, nullif(CONCAT_WS(' ', addresses.road, addresses.house_number), '')), addresses.city) AS address,\n        g.name as geofence_name,\n        g.id as geofence_id,\n        p.latitude,\n        p.longitude,\n        cp.charge_energy_added,\n        cp.charge_energy_used,\n        duration_min,\n        start_battery_level,\n        end_battery_level,\n        start_[[preferred_range]]_range_km,\n        end_[[preferred_range]]_range_km,\n        outside_temp_avg,\n        cp.id,\n        lag(end_[[preferred_range]]_range_km) OVER (ORDER BY start_date) - start_[[preferred_range]]_range_km AS range_loss,\n        p.odometer - lag(p.odometer) OVER (ORDER BY start_date) AS distance,\n        cars.efficiency,\n        cp.car_id,\n        cost,\n        max(c.charger_phases) as max_charger_phases,\n        max(c.charger_power) as max_charger_power\n    FROM\n        charging_processes cp\n\t  LEFT JOIN charges c ON cp.id = c.charging_process_id\n    LEFT JOIN positions p ON p.id = cp.position_id\n    LEFT JOIN cars ON cars.id = cp.car_id\n    LEFT JOIN addresses ON addresses.id = cp.address_id\n    LEFT JOIN geofences g ON g.id = geofence_id\nWHERE \n    cp.car_id = $car_id AND\n    $__timeFilter(start_date) AND\n    (cp.charge_energy_added IS NULL OR cp.charge_energy_added > 0) AND\n    ('${geofence:pipe}' = '-1' OR geofence_id in ($geofence))\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,21,p.odometer\nORDER BY\n    start_date\n)\nSELECT\n    start_date_ts,\n    end_date_ts,\n    CASE WHEN geofence_id IS NULL THEN CONCAT('new?lat=', latitude, '&lng=', longitude)\n         WHEN geofence_id IS NOT NULL THEN CONCAT(geofence_id, '/edit')\n    END as path,\n    car_id,\n    id,\n    \n    -- Columns\n    start_date as start_date_[[length_unit]],\n    end_date,\n    COALESCE(geofence_name, address) as address,    \n    duration_min*60 as duration_sec,\n        TO_CHAR((duration_min * INTERVAL '1 minute'), 'HH24:MI') as duration_str,\n\n    charge_energy_added * 60 / NULLIF (duration_min, 0) AS charge_energy_added_per_hour,\n    max_charger_power,\n    end_battery_level - start_battery_level AS delta_battery,\n    charge_energy_added,\n    convert_km((end_[[preferred_range]]_range_km - start_[[preferred_range]]_range_km) ::numeric* 60 / NULLIF (duration_min, 0), '$length_unit') AS range_added_per_hour_$length_unit,\n    start_battery_level,\n    end_battery_level,\n    convert_km(distance::numeric, '$length_unit') AS distance_$length_unit,\n    charge_energy_used,\n    CASE WHEN charge_energy_used IS NULL THEN NULL ELSE LEAST(charge_energy_added / NULLIF(charge_energy_used, 0), 1.0) END as charging_efficiency,\n    $prixsuc * charge_energy_added as prix,\n    cost\n    FROM\n    data\nWHERE\n    (distance >= 0 OR distance IS NULL)\n    AND max_charger_phases is NULL\n    AND charge_energy_added * 60 / NULLIF (duration_min, 0) >= $pmoy\n    AND end_battery_level - start_battery_level >= $delta_battery\n    AND duration_min <= $duree\n    AND duration_min >= $dureemin\n    AND start_battery_level >= $batteriedebut\n    AND end_battery_level <= $batteriefin\n    AND max_charger_power >= $pmax\nORDER BY\n  start_date DESC;\n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "odometer"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "positions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "#Charges DC",
      "transparent": true,
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": "TeslaMate",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(0, 0, 0, 0.7)",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "duration_sec"
            },
            "properties": [
              {
                "id": "unit",
                "value": "m"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 22,
        "y": 1
      },
      "id": 33,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "/^duration_sec$/",
          "values": false
        },
        "text": {},
        "textMode": "value"
      },
      "pluginVersion": "7.5.9",
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n    SELECT\n        (round(extract(epoch FROM start_date) - 10) * 1000) AS start_date_ts,\n        (round(extract(epoch FROM end_date) + 10) * 1000) AS end_date_ts,\n        start_date,\n        end_date,\n        CONCAT_WS(', ', COALESCE(addresses.name, nullif(CONCAT_WS(' ', addresses.road, addresses.house_number), '')), addresses.city) AS address,\n        g.name as geofence_name,\n        g.id as geofence_id,\n        p.latitude,\n        p.longitude,\n        cp.charge_energy_added,\n        cp.charge_energy_used,\n        duration_min,\n        start_battery_level,\n        end_battery_level,\n        start_[[preferred_range]]_range_km,\n        end_[[preferred_range]]_range_km,\n        outside_temp_avg,\n        cp.id,\n        lag(end_[[preferred_range]]_range_km) OVER (ORDER BY start_date) - start_[[preferred_range]]_range_km AS range_loss,\n        p.odometer - lag(p.odometer) OVER (ORDER BY start_date) AS distance,\n        cars.efficiency,\n        cp.car_id,\n        cost,\n        max(c.charger_phases) as max_charger_phases,\n        max(c.charger_power) as max_charger_power\n    FROM\n        charging_processes cp\n\t  LEFT JOIN charges c ON cp.id = c.charging_process_id\n    LEFT JOIN positions p ON p.id = cp.position_id\n    LEFT JOIN cars ON cars.id = cp.car_id\n    LEFT JOIN addresses ON addresses.id = cp.address_id\n    LEFT JOIN geofences g ON g.id = geofence_id\nWHERE \n    cp.car_id = $car_id AND\n    $__timeFilter(start_date) AND\n    (cp.charge_energy_added IS NULL OR cp.charge_energy_added > 0) AND\n    ('${geofence:pipe}' = '-1' OR geofence_id in ($geofence))\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,21,p.odometer\nORDER BY\n    start_date\n)\nSELECT\n    start_date_ts,\n    end_date_ts,\n    CASE WHEN geofence_id IS NULL THEN CONCAT('new?lat=', latitude, '&lng=', longitude)\n         WHEN geofence_id IS NOT NULL THEN CONCAT(geofence_id, '/edit')\n    END as path,\n    car_id,\n    id,\n    \n    -- Columns\n    start_date as start_date_[[length_unit]],\n    end_date,\n    COALESCE(geofence_name, address) as address,    \n    duration_min*60 as duration_sec,\n        TO_CHAR((duration_min * INTERVAL '1 minute'), 'HH24:MI') as duration_str,\n\n    charge_energy_added * 60 / NULLIF (duration_min, 0) AS charge_energy_added_per_hour,\n    max_charger_power,\n    end_battery_level - start_battery_level AS delta_battery,\n    charge_energy_added,\n    convert_km((end_[[preferred_range]]_range_km - start_[[preferred_range]]_range_km) ::numeric* 60 / NULLIF (duration_min, 0), '$length_unit') AS range_added_per_hour_$length_unit,\n    start_battery_level,\n    end_battery_level,\n    convert_km(distance::numeric, '$length_unit') AS distance_$length_unit,\n    charge_energy_used,\n    CASE WHEN charge_energy_used IS NULL THEN NULL ELSE LEAST(charge_energy_added / NULLIF(charge_energy_used, 0), 1.0) END as charging_efficiency,\n    $prixsuc * charge_energy_added as prix,\n    cost\n    FROM\n    data\nWHERE\n    (distance >= 0 OR distance IS NULL)\n    AND max_charger_phases is NULL\n    AND charge_energy_added * 60 / NULLIF (duration_min, 0) >= $pmoy\n    AND end_battery_level - start_battery_level >= $delta_battery\n    AND duration_min <= $duree\n    AND duration_min >= $dureemin\n    AND start_battery_level >= $batteriedebut\n    AND end_battery_level <= $batteriefin\n    AND max_charger_power >= $pmax\nORDER BY\n  start_date DESC;\n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "odometer"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "positions",
          "timeColumn": "date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Durée Totale",
      "transparent": true,
      "type": "stat"
    },
    {
      "columns": [],
      "datasource": "TeslaMate",
      "description": "Uniquement les charges DC",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "fontSize": "100%",
      "gridPos": {
        "h": 28,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 29,
      "links": [],
      "pageSize": null,
      "scopedVars": {
        "car_id": {
          "selected": false,
          "text": "MYFY",
          "value": "1"
        }
      },
      "scroll": false,
      "showHeader": true,
      "sort": {
        "col": 12,
        "desc": true
      },
      "styles": [
        {
          "$$hashKey": "object:9633",
          "alias": "Date",
          "align": "auto",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "link": true,
          "linkTargetBlank": true,
          "linkTooltip": "Détails de la Charge",
          "linkUrl": "d/joS3WrMMz?from=${__cell_0}&to=${__cell_1}&var-car_id=${__cell_3}&var-charging_process_id=${__cell_4}",
          "pattern": "start_date_km",
          "type": "date"
        },
        {
          "$$hashKey": "object:9634",
          "alias": "Date",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "MM/DD/YY h:mm:ss a",
          "decimals": 2,
          "link": true,
          "linkTargetBlank": true,
          "linkTooltip": "Détails de la Charge",
          "linkUrl": "d/joS3WrMMz?from=${__cell_0}&to=${__cell_1}&var-car_id=${__cell_3}&var-charging_process_id=${__cell_4}",
          "mappingType": 1,
          "pattern": "start_date_mi",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9635",
          "alias": "🔌",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "charge_energy_added",
          "thresholds": [],
          "type": "number",
          "unit": "kwatth"
        },
        {
          "$$hashKey": "object:9636",
          "alias": "% Début",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "start_battery_level",
          "thresholds": [],
          "type": "number",
          "unit": "percent"
        },
        {
          "$$hashKey": "object:9637",
          "alias": "% Fin",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "end_battery_level",
          "thresholds": [],
          "type": "number",
          "unit": "percent"
        },
        {
          "$$hashKey": "object:9638",
          "alias": "⏱",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "link": true,
          "linkTooltip": "$__cell_9",
          "linkUrl": "#",
          "mappingType": 1,
          "pattern": "duration_sec",
          "thresholds": [],
          "type": "number",
          "unit": "dtdurations"
        },
        {
          "$$hashKey": "object:9639",
          "alias": "Température",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 1,
          "mappingType": 1,
          "pattern": "outside_temp_avg_c",
          "thresholds": [],
          "type": "number",
          "unit": "celsius"
        },
        {
          "$$hashKey": "object:9640",
          "alias": "Coût",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTargetBlank": false,
          "linkTooltip": "Associer un coût",
          "linkUrl": "[[base_url:raw]]/charge-cost/${__cell_4:raw}",
          "mappingType": 1,
          "pattern": "cost",
          "thresholds": [],
          "type": "hidden",
          "unit": "none"
        },
        {
          "$$hashKey": "object:9641",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "/.*_ts/",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9642",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9643",
          "alias": "Lieu",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTargetBlank": true,
          "linkTooltip": "Créer ou modifier une localisation",
          "linkUrl": "[[base_url:raw]]/geo-fences/${__cell_2:raw}",
          "mappingType": 1,
          "pattern": "address",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9644",
          "alias": "Parcouru",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "distance_km",
          "thresholds": [],
          "type": "number",
          "unit": "lengthkm"
        },
        {
          "$$hashKey": "object:9645",
          "alias": "⚡️",
          "align": "",
          "colorMode": "value",
          "colors": [
            "#E02F44",
            "#FF780A",
            "#56A64B"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 1,
          "mappingType": 1,
          "pattern": "charge_energy_added_per_hour",
          "thresholds": [
            "80",
            " 120",
            " 250"
          ],
          "type": "number",
          "unit": "kwatt"
        },
        {
          "$$hashKey": "object:9646",
          "alias": "⚡️",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "range_added_per_hour_km",
          "thresholds": [],
          "type": "number",
          "unit": "velocitykmh"
        },
        {
          "$$hashKey": "object:9647",
          "alias": "Température",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 1,
          "mappingType": 1,
          "pattern": "outside_temp_avg_f",
          "thresholds": [],
          "type": "number",
          "unit": "fahrenheit"
        },
        {
          "$$hashKey": "object:9648",
          "alias": "Parcouru",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "distance_mi",
          "thresholds": [],
          "type": "number",
          "unit": "lengthmi"
        },
        {
          "$$hashKey": "object:9649",
          "alias": "mi / h",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "range_added_per_hour_mi",
          "thresholds": [],
          "type": "number",
          "unit": "none"
        },
        {
          "$$hashKey": "object:9650",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "path",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9651",
          "alias": "Utilisé",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "linkTooltip": "",
          "linkUrl": "",
          "mappingType": 1,
          "pattern": "charge_energy_used",
          "thresholds": [],
          "type": "number",
          "unit": "kwatth"
        },
        {
          "$$hashKey": "object:9652",
          "alias": "Confidence",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "link": false,
          "mappingType": 1,
          "pattern": "charge_energy_used_confidence",
          "thresholds": [],
          "type": "hidden",
          "unit": "none"
        },
        {
          "$$hashKey": "object:9653",
          "alias": "Efficience",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "charging_efficiency",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "$$hashKey": "object:9654",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "car_id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9655",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "end_date",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9656",
          "alias": "🔋",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "delta_battery",
          "thresholds": [],
          "type": "number",
          "unit": "percent"
        },
        {
          "$$hashKey": "object:934",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "$$hashKey": "object:1320",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "$$hashKey": "object:9657",
          "alias": "Prix",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "prix",
          "thresholds": [],
          "type": "number",
          "unit": "€"
        },
        {
          "$$hashKey": "object:1455",
          "alias": "⚡️Max",
          "align": "auto",
          "colorMode": "value",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "max_charger_power",
          "thresholds": [
            "100",
            " 130",
            " 250"
          ],
          "type": "number",
          "unit": "kwatt"
        },
        {
          "$$hashKey": "object:5298",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "duration_str",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH data AS (\n    SELECT\n        (round(extract(epoch FROM start_date) - 10) * 1000) AS start_date_ts,\n        (round(extract(epoch FROM end_date) + 10) * 1000) AS end_date_ts,\n        start_date,\n        end_date,\n        CONCAT_WS(', ', COALESCE(addresses.name, nullif(CONCAT_WS(' ', addresses.road, addresses.house_number), '')), addresses.city) AS address,\n        g.name as geofence_name,\n        g.id as geofence_id,\n        p.latitude,\n        p.longitude,\n        cp.charge_energy_added,\n        cp.charge_energy_used,\n        duration_min,\n        start_battery_level,\n        end_battery_level,\n        start_[[preferred_range]]_range_km,\n        end_[[preferred_range]]_range_km,\n        outside_temp_avg,\n        cp.id,\n        lag(end_[[preferred_range]]_range_km) OVER (ORDER BY start_date) - start_[[preferred_range]]_range_km AS range_loss,\n        p.odometer - lag(p.odometer) OVER (ORDER BY start_date) AS distance,\n        cars.efficiency,\n        cp.car_id,\n        cost,\n        max(c.charger_phases) as max_charger_phases,\n        max(c.charger_power) as max_charger_power\n    FROM\n        charging_processes cp\n\t  LEFT JOIN charges c ON cp.id = c.charging_process_id\n    LEFT JOIN positions p ON p.id = cp.position_id\n    LEFT JOIN cars ON cars.id = cp.car_id\n    LEFT JOIN addresses ON addresses.id = cp.address_id\n    LEFT JOIN geofences g ON g.id = geofence_id\nWHERE \n    cp.car_id = $car_id AND\n    $__timeFilter(start_date) AND\n    (cp.charge_energy_added IS NULL OR cp.charge_energy_added > 0) AND\n    ('${geofence:pipe}' = '-1' OR geofence_id in ($geofence))\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11,12,13,14,15,16,17,18,21,p.odometer\nORDER BY\n    start_date\n)\nSELECT\n    start_date_ts,\n    end_date_ts,\n    CASE WHEN geofence_id IS NULL THEN CONCAT('new?lat=', latitude, '&lng=', longitude)\n         WHEN geofence_id IS NOT NULL THEN CONCAT(geofence_id, '/edit')\n    END as path,\n    car_id,\n    id,\n    \n    -- Columns\n    start_date as start_date_[[length_unit]],\n    end_date,\n    COALESCE(geofence_name, address) as address,    \n    duration_min*60 as duration_sec,\n        TO_CHAR((duration_min * INTERVAL '1 minute'), 'HH24:MI') as duration_str,\n\n    charge_energy_added * 60 / NULLIF (duration_min, 0) AS charge_energy_added_per_hour,\n    max_charger_power,\n    end_battery_level - start_battery_level AS delta_battery,\n    charge_energy_added,\n    convert_km((end_[[preferred_range]]_range_km - start_[[preferred_range]]_range_km) ::numeric* 60 / NULLIF (duration_min, 0), '$length_unit') AS range_added_per_hour_$length_unit,\n    start_battery_level,\n    end_battery_level,\n    convert_km(distance::numeric, '$length_unit') AS distance_$length_unit,\n    charge_energy_used,\n    CASE WHEN charge_energy_used IS NULL THEN NULL ELSE LEAST(charge_energy_added / NULLIF(charge_energy_used, 0), 1.0) END as charging_efficiency,\n    $prixsuc * charge_energy_added as prix,\n    cost\n    FROM\n    data\nWHERE\n    (distance >= 0 OR distance IS NULL)\n    AND max_charger_phases is NULL\n    AND charge_energy_added * 60 / NULLIF (duration_min, 0) >= $pmoy\n    AND end_battery_level - start_battery_level >= $delta_battery\n    AND duration_min <= $duree\n    AND duration_min >= $dureemin\n    AND start_battery_level >= $batteriedebut\n    AND end_battery_level <= $batteriefin\n    AND max_charger_power >= $pmax\nORDER BY\n  start_date DESC;\n    ",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Supercharges",
      "transform": "table",
      "transformations": [],
      "type": "table-old"
    }
  ],
  "refresh": false,
  "schemaVersion": 27,
  "style": "dark",
  "tags": [
    "Custom"
  ],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "TeslaMate",
        "definition": "SELECT name AS __text, id AS __value FROM cars;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": true,
        "label": "Car",
        "multi": false,
        "name": "car_id",
        "options": [],
        "query": "SELECT name AS __text, id AS __value FROM cars;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "km",
          "value": "km"
        },
        "datasource": "TeslaMate",
        "definition": "select unit_of_length from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "",
        "multi": false,
        "name": "length_unit",
        "options": [],
        "query": "select unit_of_length from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "C",
          "value": "C"
        },
        "datasource": "TeslaMate",
        "definition": "select unit_of_temperature from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": "",
        "multi": false,
        "name": "temp_unit",
        "options": [],
        "query": "select unit_of_temperature from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "rated",
          "value": "rated"
        },
        "datasource": "TeslaMate",
        "definition": "select preferred_range from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "preferred_range",
        "options": [],
        "query": "select preferred_range from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "datasource": "TeslaMate",
        "definition": "select base_url from settings limit 1;",
        "description": null,
        "error": null,
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "base_url",
        "options": [],
        "query": "select base_url from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "-1",
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "TeslaMate",
        "definition": "SELECT name AS __text, id AS __value FROM geofences ORDER BY name COLLATE \"C\" ASC;",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Geofence",
        "multi": true,
        "name": "geofence",
        "options": [],
        "query": "SELECT name AS __text, id AS __value FROM geofences ORDER BY name COLLATE \"C\" ASC;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": "0.32",
          "value": "0.32"
        },
        "description": null,
        "error": null,
        "hide": 2,
        "label": "Prix Superchargeur (€/kWh)",
        "name": "prixsuc",
        "options": [
          {
            "selected": true,
            "text": "0.32",
            "value": "0.32"
          }
        ],
        "query": "0.32",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "0",
          "value": "0"
        },
        "description": "Puissance Moyenne minimale de la charge à afficher",
        "error": null,
        "hide": 0,
        "label": "⚡️",
        "name": "pmoy",
        "options": [
          {
            "selected": true,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "0",
          "value": "0"
        },
        "description": "% de batterie ajoutée minimale à afficher",
        "error": null,
        "hide": 0,
        "label": "🔋",
        "name": "delta_battery",
        "options": [
          {
            "selected": true,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "0",
          "value": "0"
        },
        "description": "Durée Min de la charge",
        "error": null,
        "hide": 0,
        "label": "⏱Min",
        "name": "dureemin",
        "options": [
          {
            "selected": true,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "360",
          "value": "360"
        },
        "description": "Durée Max de la charge",
        "error": null,
        "hide": 0,
        "label": "⏱Max",
        "name": "duree",
        "options": [
          {
            "selected": true,
            "text": "360",
            "value": "360"
          }
        ],
        "query": "360",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "0",
          "value": "0"
        },
        "description": "SoC début de charge à afficher",
        "error": null,
        "hide": 0,
        "label": "% Début",
        "name": "batteriedebut",
        "options": [
          {
            "selected": true,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "100",
          "value": "100"
        },
        "description": "Batterie en fin de charge à afficher",
        "error": null,
        "hide": 0,
        "label": "% Fin",
        "name": "batteriefin",
        "options": [
          {
            "selected": true,
            "text": "100",
            "value": "100"
          }
        ],
        "query": "100",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "0",
          "value": "0"
        },
        "description": "Puissance Maximale atteinte minimale de la charge à afficher",
        "error": null,
        "hide": 0,
        "label": "⚡️Max",
        "name": "pmax",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-2y",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Supercharges (Charges DC)",
  "uid": "Myiz-gMnz",
  "version": 2
}